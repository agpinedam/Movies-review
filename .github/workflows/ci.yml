name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:latest
        ports:
          - 5433:5432
        env:
          POSTGRES_PASSWORD: docker
          POSTGRES_DB: movies
        options: >-
          --health-cmd="pg_isready -U postgres"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Cache Docker layers
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      - name: Set Docker Username
        run: echo "DOCKER_USERNAME=${{ secrets.DOCKER_USERNAME }}" >> $GITHUB_ENV

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and tag Docker images
        run: |
          if [[ "${{ github.event_name }}" == "push" ]]; then
            # Tag to use for a direct push to main
            TAG="${{ github.sha }}"
          elif [[ "${{ github.event_name }}" == "pull_request" ]]; then
            # Tag with commit SHA for PRs
            TAG="${{ github.sha }}"
          fi
          docker-compose -f docker-compose.yml build
          docker tag my-app:latest my-app:$TAG
        
      - name: Push Docker images
        run: docker-compose -f docker-compose.yml push

      - name: Logout from Docker Hub
        run: docker logout